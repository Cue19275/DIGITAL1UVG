$date
	Sat Nov 07 16:24:31 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! Q2 [3:0] $end
$var wire 4 " Q1 [3:0] $end
$var reg 1 # clk $end
$var reg 1 $ enC $end
$var reg 1 % enF $end
$var reg 1 & enL $end
$var reg 12 ' in [11:0] $end
$var reg 1 ( rst $end
$scope module r0 $end
$var wire 1 # clk $end
$var wire 1 $ enC $end
$var wire 1 % enF $end
$var wire 1 & enL $end
$var wire 12 ) in [11:0] $end
$var wire 1 ( rst $end
$var wire 4 * Q2 [3:0] $end
$var wire 4 + Q1 [3:0] $end
$var wire 8 , Fet [7:0] $end
$var wire 12 - Cuenta [11:0] $end
$scope module p1 $end
$var wire 12 . L [11:0] $end
$var wire 1 # clk $end
$var wire 1 $ clk_en $end
$var wire 1 & load_en $end
$var wire 1 ( rst $end
$var reg 12 / Q [11:0] $end
$upscope $end
$scope module p2 $end
$var wire 12 0 DIR [11:0] $end
$var wire 8 1 Y [7:0] $end
$upscope $end
$scope module p3 $end
$var wire 8 2 D [7:0] $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var wire 4 3 Q2 [3:0] $end
$var wire 4 4 Q1 [3:0] $end
$scope module r4 $end
$var wire 4 5 D [3:0] $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var wire 4 6 Q [3:0] $end
$scope module r2 $end
$var wire 2 7 D [1:0] $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var wire 2 8 Q [1:0] $end
$scope module r0 $end
$var wire 1 9 D $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var reg 1 : Q $end
$upscope $end
$scope module r1 $end
$var wire 1 ; D $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var reg 1 < Q $end
$upscope $end
$upscope $end
$scope module r3 $end
$var wire 2 = D [1:0] $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var wire 2 > Q [1:0] $end
$scope module r0 $end
$var wire 1 ? D $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var reg 1 @ Q $end
$upscope $end
$scope module r1 $end
$var wire 1 A D $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var reg 1 B Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module r5 $end
$var wire 4 C D [3:0] $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var wire 4 D Q [3:0] $end
$scope module r2 $end
$var wire 2 E D [1:0] $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var wire 2 F Q [1:0] $end
$scope module r0 $end
$var wire 1 G D $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var reg 1 H Q $end
$upscope $end
$scope module r1 $end
$var wire 1 I D $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var reg 1 J Q $end
$upscope $end
$upscope $end
$scope module r3 $end
$var wire 2 K D [1:0] $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var wire 2 L Q [1:0] $end
$scope module r0 $end
$var wire 1 M D $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var reg 1 N Q $end
$upscope $end
$scope module r1 $end
$var wire 1 O D $end
$var wire 1 # clk $end
$var wire 1 % en $end
$var wire 1 ( rst $end
$var reg 1 P Q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xP
xO
xN
xM
bx L
bx K
xJ
xI
xH
xG
bx F
bx E
bx D
bx C
xB
xA
x@
x?
bx >
bx =
x<
x;
x:
x9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
b0 .
bx -
bx ,
bx +
bx *
b0 )
0(
b0 '
0&
1%
1$
0#
bx "
bx !
$end
#2
1#
#4
09
1;
0?
1A
1G
1I
0M
1O
b10 7
b10 =
b11 E
b10 K
b1010 5
b1011 C
0P
b0 L
0N
0J
b0 !
b0 *
b0 3
b0 D
b0 F
0H
0B
b0 >
0@
0<
b0 "
b0 +
b0 4
b0 6
b0 8
0:
b10101011 ,
b10101011 1
b10101011 2
b0 -
b0 /
b0 0
0#
1(
#6
1#
#8
0#
0(
#10
0;
1?
0I
1M
b0 7
b11 =
b1 E
b11 K
b1100 5
b1101 C
b10 L
1P
1J
b1011 !
b1011 *
b1011 3
b1011 D
b11 F
1H
b10 >
1B
b1010 "
b1010 +
b1010 4
b1010 6
b10 8
1<
b11001101 ,
b11001101 1
b11001101 2
b1 -
b1 /
b1 0
1#
#12
0#
#14
1;
1I
b10 7
b11 E
b1110 5
b1111 C
b11101111 ,
b11101111 1
b11101111 2
b10 -
b10 /
b10 0
b0 8
0<
b1100 "
b1100 +
b1100 4
b1100 6
b11 >
1@
b1 F
0J
b1101 !
b1101 *
b1101 3
b1101 D
b11 L
1N
1#
#16
0#
#18
19
b11 7
b1111 5
b1111 !
b1111 *
b1111 3
b1111 D
b11 F
1J
b1110 "
b1110 +
b1110 4
b1110 6
b10 8
1<
b11111111 ,
b11111111 1
b11111111 2
b11 -
b11 /
b11 0
1#
#20
0#
#22
09
0G
b10 7
b10 E
b1110 5
b1110 C
b11101110 ,
b11101110 1
b11101110 2
b100 -
b100 /
b100 0
b1111 "
b1111 +
b1111 4
b1111 6
b11 8
1:
1#
#24
0#
#26
19
0;
0?
0I
0M
0O
b1 7
b10 =
b0 E
b0 K
b1001 5
b0 C
b1110 !
b1110 *
b1110 3
b1110 D
b10 F
0H
b1110 "
b1110 +
b1110 4
b1110 6
b10 8
0:
b10010000 ,
b10010000 1
b10010000 2
b101 -
b101 /
b101 0
1#
#28
0#
#30
09
0A
1G
1I
b0 7
b0 =
b11 E
b0 5
b11 C
b11 ,
b11 1
b11 2
b110 -
b110 /
b110 0
1:
b1 8
0<
b1001 "
b1001 +
b1001 4
b1001 6
b10 >
0@
b0 F
0J
0N
b0 !
b0 *
b0 3
b0 D
b0 L
0P
1#
#32
1;
1A
1O
b10 7
b10 =
b10 K
b1010 5
b1011 C
b0 >
0B
b0 "
b0 +
b0 4
b0 6
b0 8
0:
b10101011 ,
b10101011 1
b10101011 2
b0 -
b0 /
b0 0
0#
b11 '
b11 )
b11 .
1&
0$
1(
#34
1#
#36
0#
0(
#38
19
1?
1M
b11 7
b11 =
b11 K
b1111 5
b1111 C
b10 L
1P
1J
b1011 !
b1011 *
b1011 3
b1011 D
b11 F
1H
b10 >
1B
b1010 "
b1010 +
b1010 4
b1010 6
b10 8
1<
b11111111 ,
b11111111 1
b11111111 2
b11 -
b11 /
b11 0
1#
#40
0#
0&
1$
#42
09
0G
b10 7
b10 E
b1110 5
b1110 C
b11101110 ,
b11101110 1
b11101110 2
b100 -
b100 /
b100 0
b11 8
1:
b1111 "
b1111 +
b1111 4
b1111 6
b11 >
1@
b1111 !
b1111 *
b1111 3
b1111 D
b11 L
1N
1#
#44
0#
#46
19
0;
0?
0I
0M
0O
b1 7
b10 =
b0 E
b0 K
b1001 5
b0 C
b1110 !
b1110 *
b1110 3
b1110 D
b10 F
0H
b1110 "
b1110 +
b1110 4
b1110 6
b10 8
0:
b10010000 ,
b10010000 1
b10010000 2
b101 -
b101 /
b101 0
1#
#48
0#
#50
09
0A
1G
1I
b0 7
b0 =
b11 E
b0 5
b11 C
b11 ,
b11 1
b11 2
b110 -
b110 /
b110 0
1:
b1 8
0<
b1001 "
b1001 +
b1001 4
b1001 6
b10 >
0@
b0 F
0J
0N
b0 !
b0 *
b0 3
b0 D
b0 L
0P
1#
#52
0#
#54
0G
1O
b10 E
b10 K
b1010 C
1J
b11 !
b11 *
b11 3
b11 D
b11 F
1H
b0 >
0B
b0 "
b0 +
b0 4
b0 6
b0 8
0:
b1010 ,
b1010 1
b1010 2
b111 -
b111 /
b111 0
1#
#56
0#
#58
1;
1G
1M
b10 7
b11 E
b11 K
b10 5
b1111 C
b101111 ,
b101111 1
b101111 2
b1000 -
b1000 /
b1000 0
b10 F
0H
b1010 !
b1010 *
b1010 3
b1010 D
b10 L
1P
1#
#60
0#
#62
19
0G
b11 7
b10 E
b11 5
b1110 C
b11 L
1N
b1111 !
b1111 *
b1111 3
b1111 D
b11 F
1H
b10 "
b10 +
b10 4
b10 6
b10 8
1<
b111110 ,
b111110 1
b111110 2
b1001 -
b1001 /
b1001 0
1#
#64
0#
#66
09
0;
1?
0M
b0 7
b1 =
b10 K
b100 5
b1010 C
b1001010 ,
b1001010 1
b1001010 2
b1010 -
b1010 /
b1010 0
b11 "
b11 +
b11 4
b11 6
b11 8
1:
b1110 !
b1110 *
b1110 3
b1110 D
b10 F
0H
1#
#68
0#
#70
0?
1A
0I
1M
b10 =
b0 E
b11 K
b1000 5
b1100 C
b1010 !
b1010 *
b1010 3
b1010 D
b10 L
0N
b1 >
1@
0<
b100 "
b100 +
b100 4
b100 6
b0 8
0:
b10001100 ,
b10001100 1
b10001100 2
b1011 -
b1011 /
b1011 0
1#
#72
0#
#74
19
0A
1G
1I
0O
b1 7
b0 =
b11 E
b1 K
b1 5
b111 C
b10111 ,
b10111 1
b10111 2
b1100 -
b1100 /
b1100 0
0@
b1000 "
b1000 +
b1000 4
b1000 6
b10 >
1B
b0 F
0J
b1100 !
b1100 *
b1100 3
b1100 D
b11 L
1N
1#
#76
0#
#78
09
1A
0I
0M
1O
b0 7
b10 =
b1 E
b10 K
b1000 5
b1001 C
b1 L
0P
1J
b111 !
b111 *
b111 3
b111 D
b11 F
1H
b0 >
0B
b1 "
b1 +
b1 4
b1 6
b1 8
1:
b10001001 ,
b10001001 1
b10001001 2
b1101 -
b1101 /
b1101 0
1#
#80
0#
#82
19
1;
0A
0G
1M
0O
b11 7
b0 =
b0 E
b1 K
b11 5
b100 C
b110100 ,
b110100 1
b110100 2
b1110 -
b1110 /
b1110 0
b0 8
0:
b1000 "
b1000 +
b1000 4
b1000 6
b10 >
1B
b1 F
0J
0N
b1001 !
b1001 *
b1001 3
b1001 D
b10 L
1P
1#
#84
0#
#86
0;
1?
1I
0M
1O
b1 7
b1 =
b10 E
b10 K
b101 5
b1010 C
0P
b1 L
1N
b100 !
b100 *
b100 3
b100 D
b0 F
0H
b0 >
0B
1<
b11 "
b11 +
b11 4
b11 6
b11 8
1:
b1011010 ,
b1011010 1
b1011010 2
b1111 -
b1111 /
b1111 0
1#
#88
0#
#90
x9
x;
x?
xA
xG
xI
xM
xO
bx 7
bx =
bx E
bx K
bx 5
bx C
bx ,
bx 1
bx 2
b10000 -
b10000 /
b10000 0
b1 8
0<
b101 "
b101 +
b101 4
b101 6
b1 >
1@
b10 F
1J
0N
b1010 !
b1010 *
b1010 3
b1010 D
b10 L
1P
1#
#92
0#
#94
xP
bx L
xN
xJ
bx !
bx *
bx 3
bx D
bx F
xH
xB
bx >
x@
x<
bx "
bx +
bx 4
bx 6
bx 8
x:
b10001 -
b10001 /
b10001 0
1#
#96
0#
#98
b10010 -
b10010 /
b10010 0
1#
#100
0#
